{"version":3,"sources":["contract.js","env.js","Dgrid.js","logo.png","Form.js","Header.js","App.js","index.js"],"names":["contract","address","abi","env","omdb","truffle","useStyles","makeStyles","theme","root","margin","spacing","backgroundColor","width","split","renderCell","params","Tooltip","title","value","Typography","variant","columns","field","type","DataGridDemo","rows","classes","data","autoHeight","pageSize","getCellClassName","sortModel","sort","className","loading","length","continents","user","charity","store","Form","props","send","event","state","agent","donate","spend","continent","memo","this","web3","eth","sendTransaction","from","to","on","hash","myContract","methods","give","Date","toISOString","take","Grid","container","item","xs","src","logo","Paper","paper","TextField","label","select","onChange","setState","target","map","x","MenuItem","i","Button","color","onClick","React","Component","withStyles","flexGrow","padding","display","flexDirection","justifyContent","height","menuButton","ButtonAppBar","useState","anchorEl","setAnchorEl","handleClose","AppBar","Toolbar","IconButton","href","Home","currentTarget","Menu","keepMounted","open","Boolean","onClose","bals","cont","bal","GitHub","url","Web3","Contract","Map","getEvents","bind","error","row","returnValues","forEach","id","TimestampEST","hex2ascii","Memo","Value","Number","Continent","console","log","getPastEvents","fromBlock","toBlock","load","call","result","Object","entries","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.3fa61b3b.chunk.js","sourcesContent":["const contract = {    \n    address: '0x34b41A8f1b89e94F9E50283DD9F3a296C620E2fA',\n    abi: [\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"bytes\",\n\t\t\t\t\"name\": \"TimestampEST\",\n\t\t\t\t\"type\": \"bytes\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"From\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"To\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"Continent\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"Value\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"bytes\",\n\t\t\t\t\"name\": \"Memo\",\n\t\t\t\t\"type\": \"bytes\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"bytes\",\n\t\t\t\t\"name\": \"TxnHash\",\n\t\t\t\t\"type\": \"bytes\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"trans\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"stateMutability\": \"payable\",\n\t\t\"type\": \"fallback\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"bals\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"time\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"cont\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"value\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"memo\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"hash\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"give\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"time\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"cont\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"value\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"memo\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"hash\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"take\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t}\n]\n}\n\nexport default contract","const env = {\n    omdb: '14f8eef1',\n    truffle: '8f7572d1-e253-420a-93bc-2ed8a6f051e6',\n}\n\nexport default env;","import * as React from 'react';\nimport { Typography, Tooltip, IconButton, Toolbar } from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: theme.spacing(3),\n        '& .charity': {\n            backgroundColor: 'red',\n        },\n    },\n}));\n\nconst charity = '0x596Aa50158BFf76F8D08F848d701C83a4F754d9c';\n\nconst fields = 'id TimestampEST From To Continent Value Memo TxnHash'.split(' ');\n\nconst width = 122;\nconst renderCell = params => (\n    <Tooltip title={params.value}>\n        <Typography variant='body2'>\n            {params.value}\n        </Typography>\n    </Tooltip>\n)\nconst columns = [\n    { field: 'id', type: 'number' },\n    { field: 'TimestampEST', width, renderCell },\n    { field: 'From', width, renderCell },\n    { field: 'To', renderCell },\n    { field: 'Continent', width },\n    { field: 'Value', type: 'number', width },\n    { field: 'Memo', width },\n    { field: 'TxnHash', width, renderCell },\n]\n\nexport default function DataGridDemo({ rows }) {\n    const classes = useStyles();\n\n    const data = {\n        rows, columns,\n        autoHeight: true,\n        pageSize: 5,\n        getCellClassName: params => (\n            params.field === 'From' && params.value === charity\n                ? 'charity' : ''\n        ),\n        sortModel: [{\n            field: 'id',\n            sort: 'desc',\n        }],\n        className: classes.root,\n        loading: !rows.length,\n    };\n\n    return (\n        <DataGrid {...data} />\n    );\n}\n","export default __webpack_public_path__ + \"static/media/logo.bd51f56a.png\";","import React from 'react';\nimport { Typography, Box, Paper, Button, Grid, InputLabel, MenuItem, FormHelperText, FormControl, Select, TextField } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport logo from './logo.png';\n\nconst useStyles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(1),\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        height: '100%',\n    },\n});\n\nconst continents = ['Asia', 'Africa', 'North America', 'South America', 'Antarctica', 'Europe', 'Australia']\n\nconst user = \"0x61eB15d8A761Fc80387F50d84Fbf7Ff47a97d92F\";\nconst charity = \"0x596Aa50158BFf76F8D08F848d701C83a4F754d9c\";\nconst store = \"0xAf951AE00Ab357b8a2cFa66901E0D4D0F96e397B\";\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            agent: null,\n            continent: null,\n            value: 0,\n            memo: '',\n        };\n    }\n\n    donate() {\n        this.props.web3.eth.sendTransaction({\n            from: user,\n            to: charity,\n            value: this.state.value\n        })\n            .on('transactionHash', hash => {\n                this.props.myContract.methods.give(\n                    new Date().toISOString(), \n                    charity, \n                    this.state.continent,\n                    this.state.value, \n                    '',\n                    hash\n                ).send({ from: user });\n            });\n    }\n\n    spend() {\n        this.props.web3.eth.sendTransaction({\n            from: charity,\n            to: store,\n            value: this.state.value\n        })\n            .on('transactionHash', hash => {\n                this.props.myContract.methods.take(\n                    new Date().toISOString(), \n                    store, \n                    this.state.continent,\n                    this.state.value, \n                    this.state.memo,\n                    hash\n                ).send({ from: charity });\n            });\n    }\n\n    send = (event) => this.state.agent === 'User' ? \n        this.donate() : this.spend();\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Grid container spacing={1} className={classes.root}>\n                <Grid item xs={1}>\n                    <img src={logo} width='99%' />\n                </Grid>\n\n                <Grid item xs={1}>\n                    <Paper className={classes.paper}>\n                        <Typography variant=\"h4\">\n                            Form\n                        </Typography>\n                    </Paper>\n                </Grid>\n                \n                <Grid item xs>\n                    <Paper className={classes.paper}>\n                        <TextField \n                            label=\"Agent\" select\n                            onChange={(event) => this.setState({ agent: event.target.value })}\n                        >\n                            {'User Charity'.split(' ').map(x => (\n                                <MenuItem value={x}>{x}</MenuItem>\n                            ))}\n                        </TextField>\n                    </Paper>\n                </Grid>\n                \n                <Grid item xs>\n                    <Paper className={classes.paper}>\n                        <TextField \n                            label=\"Continent\" select\n                            onChange={(event) => this.setState({ continent: event.target.value })}\n                        >\n                            {continents.map((x, i) => (\n                                <MenuItem value={i}>{x}</MenuItem>\n                            ))}\n                        </TextField>\n                    </Paper>\n                </Grid>\n                \n                <Grid item xs>\n                    <Paper className={classes.paper}>\n                        <TextField \n                            label=\"Amount\" type='number'\n                            onChange={(event) => this.setState({ value: event.target.value })}\n                        />\n                    </Paper>\n                </Grid>\n            \n                <Grid item xs>\n                    <Paper className={classes.paper}>\n                        <TextField \n                            label=\"Memo (only for Charity)\"\n                            onChange={(event) => this.setState({ memo: event.target.value })}\n                        />\n                    </Paper>\n                </Grid>\n\n                <Grid item xs={1}>\n                    <div className={classes.paper}>\n                        <Button \n                            variant=\"contained\" color=\"primary\"\n                            onClick={this.send}\n                        >\n                            Submit\n                        </Button>\n                    </div>\n                </Grid>\n            \n            </Grid>        \n        );\n    }\n}\n\nexport default withStyles(useStyles)(Form);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Typography, Box, Paper, Button, Grid, InputLabel, MenuItem, FormHelperText, FormControl, Select, TextField, Menu } from '@material-ui/core';\nimport { GitHub, Home } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        margin: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function ButtonAppBar(props) {\n    const classes = useStyles();\n    \n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar>\n                <Toolbar>\n\n                    <IconButton\n                        color=\"inherit\"\n                        href='https://georgefane.github.io/'\n                    >\n                        <Home />\n                    </IconButton>\n\n                    <Typography variant=\"h6\" className={classes.title}>\n                        CryptoCharity\n                    </Typography>\n\n                    \n                    <Button\n                        onClick={handleClick}\n                        color='inherit'\n                        variant='outlined'\n                    >\n                        Balances\n                    </Button>\n                    <Menu\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={Boolean(anchorEl)}\n                        onClose={handleClose}\n                    >\n                        {props.bals.map( ([cont, bal]) => (\n                            <MenuItem onClick={handleClose}>\n                                {cont}: {bal}\n                            </MenuItem>\n                        ))}\n                    </Menu>\n\n                    <IconButton\n                        color=\"inherit\"\n                        href='https://github.com/GeorgeFane/cryptocharity'\n                        target='_blank'\n                    >\n                        <GitHub />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Typography, Tooltip, IconButton, Toolbar } from '@material-ui/core';\nimport { GitHub } from '@material-ui/icons';\nimport { DataGrid } from '@material-ui/data-grid';\n\nimport Web3 from 'web3';\nimport hex2ascii from 'hex2ascii';\n\nimport contract from './contract';\nimport env from './env';\nimport Dgrid from './Dgrid';\nimport Form from './Form';\nimport Header from './Header';\n\nconst url = 'https://sandbox.truffleteams.com/' + env.truffle;\nconst web3 = new Web3(url);\n\nconst user = \"0x61eB15d8A761Fc80387F50d84Fbf7Ff47a97d92F\";\nconst charity = \"0x596Aa50158BFf76F8D08F848d701C83a4F754d9c\";\nconst store = \"0xAf951AE00Ab357b8a2cFa66901E0D4D0F96e397B\";\n\nconst myContract = new web3.eth.Contract(contract.abi, contract.address);\n\nconst continents = ['Asia', 'Africa', 'NorthAmerica', 'SouthAmerica', 'Antarctica', 'Europe', 'Australia']\n\nclass Map extends React.Component {\n    constructor () {\n        super();\n        this.state = {\n            rows: [],\n            bals: {},\n        };\n        this.getEvents = this.getEvents.bind(this);\n    }\n\n    getEvents(error, data) {\n        const rows = data.map(row => row.returnValues);\n        rows.forEach( (row, id) => {\n            row['id'] = id;\n            row.TimestampEST = hex2ascii(row.TimestampEST);\n            row.Memo = hex2ascii(row.Memo);\n            row.Value = Number(row.Value);\n            row.Continent = continents[row.Continent];\n        })\n        this.setState({ rows });\n        console.log(rows);\n    }\n\n    load() {\n        myContract.getPastEvents('trans', {\n            fromBlock: 0,\n            toBlock: 'latest',\n        }, this.getEvents);\n    }\n\n    componentDidMount() {\n        // get events\n        this.load();\n\n        // get balances\n        continents.map( (cont, i) => {\n            myContract.methods.bals(i)\n                .call( (error, result) => this.state.bals[cont] = result);\n        });\n    }\n\n    render () {\n        return (\n            <div>\n                <Header bals={Object.entries(this.state.bals)} />\n                <Toolbar />\n\n                <Form web3={web3} myContract={myContract} />\n                <Dgrid rows={this.state.rows} />\n            </div>\n        );\n    }\n}\n\nexport default Map;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}